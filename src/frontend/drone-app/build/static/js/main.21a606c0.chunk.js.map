{"version":3,"sources":["serviceWorker.js","API.js","Drones.js","Util.js","Map.js","index.js","AppBar.js","Routes.js"],"names":["Boolean","window","location","hostname","match","URL","DRONES_API","GetDrones","_callee","req","req_json","regenerator_default","a","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","AddDrone","_callee2","_context2","method","body","JSON","stringify","headers","Content-Type","GetDrone","_callee3","uuid","_context3","concat","generate_table_row","drone_json","latitude","longitude","data_timestamp","speed","moving","move_timestamp","react_default","createElement","Fragment","react_router_dom","to","toFixed","Drones","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","drone_list","update","spinner","droneListUpdateHandler","bind","assertThisInitialized","addButtonHandler","setState","toggleSpinner","add_req","console","log","all_drones","map","timer","setInterval","Container_default","Row_default","Col_default","className","Button_default","disabled","onClick","Spinner_default","as","animation","size","role","aria-hidden","Table_default","responsive","length","React","Component","haversineDistance","lon1","lat1","lon2","lat2","toRad","x","Math","PI","dLat","dLon","sin","cos","atan2","sqrt","require","config","MAPBOX_TOKEN","markerStyle","color","MarkerIcon","FaRegDotCircle","mapBoxMapStyle","Map","_ref","params","_useState","useState","_useState2","slicedToArray","markerOptions","setMarkerOptions","_useState3","width","height","zoom","_useState4","viewport","setViewPort","useInterval","asyncToGenerator","mark","data","distance","objectSpread","esm","assign","mapStyle","onViewportChange","mapboxApiAccessToken","style","ReactDOM","render","Navbar_default","bg","Brand","react_router","exact","path","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.21a606c0.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const HOST = ''\r\nconst PORT = ''\r\nconst URL = HOST+PORT\r\n\r\nconst DRONES_API = '/api/drones'\r\n\r\n/* \r\n  Get list of all drones.\r\n*/\r\nasync function GetDrones() {\r\n    let req = await fetch(URL+DRONES_API)\r\n    let req_json = await req.json()\r\n    \r\n    return req_json\r\n}\r\n\r\n/* \r\nAdd a new drone to database.\r\n*/\r\nasync function AddDrone() {\r\n    let req = await fetch(URL+DRONES_API, {\r\n        'method': 'POST',\r\n        'body': JSON.stringify({}),\r\n        'headers': {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n    \r\n    let req_json = await req.json()\r\n    \r\n    return req_json\r\n}\r\n\r\n/* \r\n    Fetch information of single drone.\r\n*/\r\nasync function GetDrone(uuid) {\r\n    let req = await fetch(URL+DRONES_API+`/${uuid}`)\r\n    let req_json = await req.json()\r\n    \r\n    return req_json\r\n}\r\n  \r\nexport {\r\n    HOST,\r\n    PORT,\r\n    URL,\r\n    DRONES_API,\r\n    GetDrones,\r\n    GetDrone,\r\n    AddDrone\r\n}","import React from 'react';\n\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\nimport Table from 'react-bootstrap/Table'\nimport Spinner from 'react-bootstrap/Spinner'\nimport { Link } from 'react-router-dom'\n\nimport {\n  GetDrones,\n  AddDrone\n} from './API'\n\n/* \n  Generate a table row from drone_state json.\n*/\nfunction generate_table_row(drone_json) {\n  let uuid = drone_json['uuid']\n  let latitude = drone_json['latitude']\n  let longitude = drone_json['longitude']\n  let data_timestamp = drone_json['data_timestamp']\n  let speed = drone_json['curr_speed']\n  let moving = drone_json['is_moving']\n  let move_timestamp = drone_json['move_timestamp']\n  \n  return (\n    <React.Fragment>\n    <tr>\n      <td><Link to={`/drones/${uuid}`}>{uuid}</Link></td>\n      <td>{latitude.toFixed(3)}</td>\n      <td>{longitude.toFixed(3)}</td>\n      <td>{data_timestamp}</td>\n      <td>{speed.toFixed(3)}</td>\n      <td>{moving ? '✓' : '✖'}</td>\n      <td>{move_timestamp}</td>\n    </tr> \n    </React.Fragment>\n  )\n}\n/* \n    Drones\n*/\nclass Drones extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      drone_list: [],\n      update: 2*1000, // Update Frequency. 2 seconds.\n      spinner: false\n    }\n    this.droneListUpdateHandler = this.droneListUpdateHandler.bind(this)\n    this.addButtonHandler = this.addButtonHandler.bind(this)\n  }\n\n  toggleSpinner() {\n    this.setState({\n      spinner: !this.state.spinner\n    })\n  }\n  \n  /* \n    Button handler to add a new drone.\n  */\n  async addButtonHandler() {\n    this.toggleSpinner()\n    let add_req = await AddDrone()\n    this.toggleSpinner()\n    if (add_req.uuid != null) {\n      console.log('Drone Created')\n    }\n  }\n  \n  /* \n    Update the drone table.\n  */\n  async droneListUpdateHandler() {\n    let all_drones = await GetDrones()\n    all_drones = all_drones.map(generate_table_row);\n    \n    this.setState({\n      drone_list: all_drones\n    })\n  }\n  \n\n  componentDidMount() {\n    this.timer = setInterval(this.droneListUpdateHandler, this.state.update)\n  }\n  render() {\n      return (\n        <Container>\n          <Row>\n            <Col>\n              <div className='m-2'>\n              <Button disabled={this.state.spinner} onClick={this.addButtonHandler}>{this.state.spinner ?\n              <Spinner\n                as=\"span\"\n                animation=\"grow\"\n                size=\"sm\"\n                role=\"status\"\n                aria-hidden=\"true\" \n              />: <React.Fragment></React.Fragment>} Add Drone</Button>\n              </div>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Table responsive='xl'>\n                <thead>\n                  <tr>\n                    <th>UUID</th>\n                    <th>Latitude</th>\n                    <th>Longitude</th>\n                    <th>Data Timestamp</th>\n                    <th>Speed (m/s)</th>\n                    <th>Moving</th>\n                    <th>Move Timestamp</th>\n                  </tr>\n                </thead>\n                {this.state.drone_list.length > 0 ? this.state.drone_list : <React.Fragment></React.Fragment>}\n              </Table>\n            </Col>\n          </Row>\n        </Container>      \n      )\n  } \n}\n\nexport default Drones;\n","import { FaCreativeCommonsSamplingPlus } from \"react-icons/fa\";\r\n\r\nfunction haversineDistance(lon1, lat1, lon2, lat2) {\r\n    function toRad(x) {\r\n        return x * Math.PI / 180;\r\n    }\r\n\r\n    var R = 6371; // km\r\n    \r\n    var x1 = lat2 - lat1;\r\n    var dLat = toRad(x1);\r\n    var x2 = lon2 - lon1;\r\n    var dLon = toRad(x2)\r\n    var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n        Math.cos(toRad(lat1)) * Math.cos(toRad(lat2)) *\r\n        Math.sin(dLon / 2) * Math.sin(dLon / 2);\r\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n    var d = R * c;\r\n\r\n    return d;\r\n}  \r\n\r\nexport {\r\n    haversineDistance\r\n}","import React, { useState, useEffect } from 'react';\r\nimport MapGL, {Marker } from 'react-map-gl'\r\nimport 'mapbox-gl/dist/mapbox-gl.css'\r\nimport { haversineDistance } from './Util'\r\nimport useInterval from '@use-it/interval';\r\n\r\nimport {\r\n    GetDrone\r\n} from './API'\r\nimport { FaRegDotCircle } from 'react-icons/fa'\r\nrequire('dotenv').config()\r\n\r\nconst MAPBOX_TOKEN = 'pk.eyJ1IjoiYmF0dGVyeWNoYXJnZXIiLCJhIjoiY2sxdXAxMWV1MGQ1ZDNucXVtcGo4emlobSJ9.inK45HvAdqwtHdbMsbNdOw'\r\n\r\nconst markerStyle = {\r\n    color: '#FFFFFF',\r\n}\r\nconst MarkerIcon = FaRegDotCircle\r\n\r\nconst mapBoxMapStyle = \"mapbox://styles/mapbox/dark-v9\"\r\n\r\nexport default function Map({ match }) {\r\n    let uuid = match.params.uuid\r\n    \r\n    const [markerOptions, setMarkerOptions] = useState({\r\n        latitude: 0,\r\n        longitude: 0\r\n    })\r\n\r\n    const [viewport, setViewPort ] = useState({\r\n        width: \"100%\",\r\n        height: 800,\r\n        latitude: 0,\r\n        longitude: 0,\r\n        zoom: 16\r\n    })\r\n\r\n    useInterval(async () => {\r\n        let data = await GetDrone(uuid)\r\n        let latitude = data['latitude']\r\n        let longitude = data['longitude']\r\n        setMarkerOptions({\r\n            latitude: latitude,\r\n            longitude: longitude\r\n        })\r\n\r\n        let distance = haversineDistance(viewport.longitude, viewport.latitude, longitude, latitude)\r\n        console.log(distance, viewport.latitude, viewport.longitude, latitude, longitude)\r\n        if( distance > 10) {\r\n            setViewPort({\r\n                ...viewport,\r\n                latitude: data['latitude'],\r\n                longitude: data['longitude'],\r\n                zoom: 16\r\n            })\r\n        }\r\n        console.log(uuid, data, viewport, markerOptions)\r\n    }, 500)\r\n\r\n    const _onViewportChange = viewport => setViewPort({...viewport})\r\n    \r\n    return (\r\n    <MapGL\r\n    {...viewport}\r\n    mapStyle={mapBoxMapStyle}\r\n    onViewportChange={_onViewportChange}\r\n    mapboxApiAccessToken={MAPBOX_TOKEN}\r\n    >\r\n        <Marker {...markerOptions}>\r\n            <MarkerIcon style={markerStyle} />\r\n            <p style={markerStyle}>{uuid}</p>\r\n        </Marker>\r\n    </MapGL>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport {\n    HashRouter as Router\n} from 'react-router-dom';\nimport ReactRouter from './Routes';  \nimport AppBar from './AppBar'\n\nReactDOM.render(\n    <React.Fragment>\n      <Router>\n        <AppBar />\n        <ReactRouter />\n      </Router>\n    </React.Fragment>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\nrequire('dotenv').config()","import React from 'react'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function AppBar(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <Navbar bg=\"dark\">\r\n        <Navbar.Brand><Link to={'/'}>Dronesy</Link></Navbar.Brand>\r\n      </Navbar>\r\n    </React.Fragment>\r\n  )\r\n}","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Drones from './Drones';\r\nimport Map from './Map'\r\n\r\nexport default function ReactRouter() {\r\n    return (\r\n        <React.Fragment>\r\n            <Route exact path=\"/\" component={Drones} />\r\n            <Route exact path=\"/drones\" component={Drones} />\r\n            <Route exact path=\"/drones/:uuid\" component={Map} />\r\n        </React.Fragment>\r\n    );\r\n}"],"sourceRoot":""}